ggtitle("Count of Moves by Rating")
data = movies,
aes(x = Rating)) +
geom_bar() +
coord_flip()+
ggtitle("Count of Movies by Rating")
# Create a Horz frequency bar chart for ratings
ggplot(
data = movies,
aes(x = Rating)) +
geom_bar() +
coord_flip()+
ggtitle("Count of Movies by Rating")
data = movies,
aes(x = Rating)) +
geom_point(stat = "count") +
coord_flip() + # Key to fliping the chart on it's side
ggtitle("Count of Movies by Rating")
# Create a Cleveland Dot Plot
ggplot(
data = movies,
aes(x = Rating)) +
geom_point(stat = "count") +
coord_flip() + # Key to fliping the chart on it's side
ggtitle("Count of Movies by Rating")
# Creating a pie in ggplot is kinda a hack. We use a geom_bar() but then set the polar cords to theta = "y"
ggplot(
data = movies,
aes(x = "", fill = Rating)) +
geom_bar() +
coord_polar(theta = "y") +
ggtitle("Count of Movies by Rating") +
ylab("")
data = movies,
aes(x = "", fill = Award)) +
geom_bar() +
coord_polar(theta = "y") +
ggtitle("Count of Movies by Rating") +
ylab("")
ggplot(
data = movies,
aes(x = "", fill = Award)) +
geom_bar() +
coord_polar(theta = "y") +
ggtitle("Count of Movies by Rating") +
ylab("")
ggplot(
data = movies,
aes(x = "", fill = Awards)) +
geom_bar() +
coord_polar(theta = "y") +
ggtitle("Count of Movies by Rating") +
ylab("")
ggplot(
data = movies,
aes(x = "", fill = Awards)) +
geom_bar() +
coord_polar(theta = "y") +
ggtitle("Count of Movies by Rating") +
ylab("")
ggplot(
data = movies,
aes(x = "", fill = Awards)) +
geom_bar() +
coord_polar(theta = "y") +
ggtitle("Proportion of Movies that Won Awards") +
ylab("")
# using movie data to answer questions with ggplot2:
library("ggplot2")
# Set working directory
setwd("C:/Users/anyai/Documents/GitHub/DataViz")
# Load the movie data from csv
movies <- read.csv("Movies.csv")
# Peak at the structure
str(movies)
# Create a frequency bar chart for ratings
ggplot(
data = movies,
aes(x = Rating)) +
geom_bar() +
ggtitle("Count of Moves by Rating")
# Create a Horz frequency bar chart for ratings
ggplot(
data = movies,
aes(x = Rating)) +
geom_bar() +
coord_flip() + # Key to fliping the chart on it's side
ggtitle("Count of Movies by Rating")
# Create a Cleveland Dot Plot
ggplot(
data = movies,
aes(x = Rating)) +
geom_point(stat = "count") +
coord_flip() + # Key to fliping the chart on it's side
ggtitle("Count of Movies by Rating")
# Creating a pie in ggplot is kinda a hack. We use a geom_bar() but then set the polar cords to theta = "y"
ggplot(
data = movies,
aes(x = "", fill = Rating)) +
geom_bar() +
coord_polar(theta = "y") +
ggtitle("Count of Movies by Rating") +
ylab("")
ggplot(
data = movies,
aes(x = "", fill = Awards)) +
geom_bar() +
coord_polar(theta = "y") +
ggtitle("Proportion of Movies that Won Awards") +
ylab("")
#Quantitative Univariate Analysis
# Visualizing One Numeric Variable
# Using the base graphics system
# Set working directory
setwd("C:/Users/anyai/Documents/GitHub/DataViz")
# Load the movie data from csv
movies <- read.csv("Movies.csv")
# Peak at the structure
str(movies)
# Box plot shows the five number summary statistics for a single quantitative variable
# Minimum value excluding outliers
# The lower, or first quartile, the  median, the upper, or third quartile
# Max value excluding outliers
# Outliers = Q1 - (1.5 * IQR) or Q3 + (1.5 * IQR)
# Create a Dot plot to show movie runtimes
plot(
x = movies$Runtime,
y = rep(0, nrow(movies)),
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)",
ylab = ""
yaxt = "n"
)
# Create a Dot plot to show movie runtimes
plot(
x = movies$Runtime,
y = rep(0, nrow(movies)),
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)",
ylab = ""
yaxt = "n"
)
# Create a Dot plot to show movie runtimes
plot(
x = movies$Runtime,
y = rep(0, nrow(movies)),
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)",
ylab = "",
yaxt = "n"
)
# Create a Dot plot to show movie runtimes
plot(
x = movies$Runtime,
y = rep(0, nrow(movies)), #rep makes a vector of value param1 and of length param2
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)",
ylab = "",
yaxt = "n",
pch = 16,
col = rgb(0,0,0,0.1)
)
# Create a jitter plot to show movie runtimes
plot(
x = movies$Runtime,
y = jitter(rep(0, nrow(movies))), #rep makes a vector of value param1 and of length param2
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)",
ylab = "",
yaxt = "n",
pch = 16,
col = rgb(0,0,0,0.1)
)
# Create a jitter plot to show movie runtimes
plot(
x = movies$Runtime,
y = jitter(rep(0, nrow(movies))), #rep makes a vector of value param1 and of length param2
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)",
ylab = "",
yaxt = "n",
pch = 16,
col = rgb(0,0,0,0.5)
)
# Box plot shows the five number summary statistics for a single quantitative variable
# Minimum value excluding outliers
# The lower, or first quartile, the  median, the upper, or third quartile
# Max value excluding outliers
# Outliers = Q1 - (1.5 * IQR) or Q3 + (1.5 * IQR)
boxplot(
x = movies$Runtime,
horizontal = TRUE,
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)"
)
# Histogram of runtime
hist(
x = movies$Runtime,
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)"
)
# Histogram of runtime
hist(
x = movies$Runtime,
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)",
breaks = 30
)
# Density plot
plot(
x = density(movies$Runtime),
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)"
)
# Make a 4 row 1 column dashboard
par(mfrow = c(4,1))
par(mfrow = c(4,1))
# Draw all four charts again
# Create a jitter plot to show movie runtimes
plot(
x = movies$Runtime,
y = jitter(rep(0, nrow(movies))), #rep makes a vector of value param1 and of length param2
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)",
ylab = "",
yaxt = "n",
pch = 16,
col = rgb(0,0,0,0.5)
)
# Box plot shows the five number summary statistics for a single quantitative variable
boxplot(
x = movies$Runtime,
horizontal = TRUE,
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)"
)
# Histogram of runtime
hist(
x = movies$Runtime,
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)",
breaks = 30
)
# Density plot
plot(
x = density(movies$Runtime),
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)"
)
# Set rows back to 1
par(mfrow = c(1,1))
# Using the lattice graphics system
library("lattice")
# Set working directory
setwd("C:/Users/anyai/Documents/GitHub/DataViz")
# Load the movie data from csv
movies <- read.csv("Movies.csv")
# Peak at the structure
str(movies)
# Dot plot
stripplot(
data = movies,
x = ~Runtime,
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)"
)
source('~/.active-rstudio-document', echo=TRUE)
# Box Plot
bwplot(  # bw stands for box and wiskers
x = ~Runtime,
data = movies,
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)"
)
# Histogram
histogram(
x = ~Runtime,
data = movies,
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)"
)
# Density
densityplot(
x = ~Runtime,
data = movies,
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)"
)
# Make a 4 row 1 column dashboard
# Jitter Plot
jit <- stripplot(
data = movies,
x = ~Runtime,
jitter = TRUE,
amount = 0.5,
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)"
)
# Box Plot
bw <- bwplot(  # bw stands for box and wiskers
x = ~Runtime,
data = movies,
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)"
)
# Histogram
hist <- histogram(
x = ~Runtime,
data = movies,
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)"
)
# Density
dens <- densityplot(
x = ~Runtime,
data = movies,
main = "Distribution of Movie Runtimes",
xlab = "Runtime (minutes)"
)
print(
x = jit,
position = c(0,0.75,1,1),
more = TRUE
)
print(
x = bw,
position = c(0,0.50,1,1),
more = TRUE
)
print(
x = hist,
position = c(0,0.25,1,0.50),
more = TRUE
)
print(
x = dens,
position = c(0,0,1,0.25)
)
print(
x = jit,
position = c(0,0.75,1,1),
more = TRUE
)
print(
x = bw,
position = c(0,0.50,1,0.75),
more = TRUE
)
print(
x = hist,
position = c(0,0.25,1,0.50),
more = TRUE
)
print(
x = dens,
position = c(0,0,1,0.25)
)
#Quantitative Univariate Analysis
# Visualizing One Numeric Variable
# Using the ggplot2 graphics system
library("ggplot2")
# Set working directory
setwd("C:/Users/anyai/Documents/GitHub/DataViz")
# Load the movie data from csv
movies <- read.csv("Movies.csv")
# Peak at the structure
str(movies)
# Dot Plot
ggplot(
data = movies,
aes(x = Runtime, stat = "count")) +
geom_dotplot(binwidth = 1) +
ggtitle("Distribution of Movie Runtimes") +
xlab("Runtime (minutes)")
# Violin-style dot plot
ggplot(
data = movies,
aes(x = Runtime, stat = "count")) +
geom_dotplot(binwidth = 1,
stackdir = "center") +
ggtitle("Distribution of Movie Runtimes") +
xlab("Runtime (minutes)")
# Box plot
ggplot(
data = movies,
aes(x=Runtime, y=Runtime))+
geom_boxplot() +
coord_flip() +
ggtitle("Distribution of Movie Runtimes") +
xlab("") +
ylab("Runtime (minutes)")+
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
)
# Histogram
ggplot(
data = movies,
aes(x=Runtime)) +
geom_histogram(binwidth = 10) +
ggtitle("Distribution of Movie Runtimes") +
xlab("Runtime (minutes)")
# Histogram
ggplot(
data = movies,
aes(x=Runtime)) +
geom_histogram(binwidth = 5) +
ggtitle("Distribution of Movie Runtimes") +
xlab("Runtime (minutes)")
# Density Plot
ggplot(
data = movies,
aes(x=Runtime))+
geom_density()+
ggtitle("Distribution of Movie Runtimes") +
xlab("Runtime (minutes)")
library(grid)
viewport <- viewport(
layout = grid.layout(4,1))
pushViewport(viewport)
# Violin-style dot plot
dot <- ggplot(
data = movies,
aes(x = Runtime, stat = "count")) +
geom_dotplot(binwidth = 1,
stackdir = "center") +
ggtitle("Distribution of Movie Runtimes") +
xlab("Runtime (minutes)")
#clear Plot window
dev.off()
viewport <- viewport(
layout = grid.layout(4,1))
pushViewport(viewport)
# Violin-style dot plot
dot <- ggplot(
data = movies,
aes(x = Runtime, stat = "count")) +
geom_dotplot(binwidth = 1,
stackdir = "center") +
ggtitle("Distribution of Movie Runtimes") +
xlab("Runtime (minutes)")
print(
x = dot,
vp = viewport(
layout.pos.row = 1,
layout.pos.col = 1
)
)
# Box plot
box <- ggplot(
data = movies,
aes(x=Runtime, y=Runtime))+
geom_boxplot() +
coord_flip() +
ggtitle("Distribution of Movie Runtimes") +
xlab("") +
ylab("Runtime (minutes)")+
theme(
axis.text.y = element_blank(),
axis.ticks.y = element_blank()
)
print(
x = dot,
vp = viewport(
layout.pos.row = 2,
layout.pos.col = 1
)
)
print(
x = box,
vp = viewport(
layout.pos.row = 2,
layout.pos.col = 1
)
)
# Histogram
hist <- ggplot(
data = movies,
aes(x=Runtime)) +
geom_histogram(binwidth = 5) +
ggtitle("Distribution of Movie Runtimes") +
xlab("Runtime (minutes)")
print(
x = hist,
vp = viewport(
layout.pos.row = 3,
layout.pos.col = 1
)
)
# Density Plot
dens <- ggplot(
data = movies,
aes(x=Runtime))+
geom_density()+
ggtitle("Distribution of Movie Runtimes") +
xlab("Runtime (minutes)")
print(
x = dens,
vp = viewport(
layout.pos.row = 4,
layout.pos.col = 1
)
)
# Qualitative Bivariate Analysis
# Visualizing Two Categorical Variables
# Using Base Graphics System
# Set working directory
setwd("C:/Users/anyai/Documents/GitHub/DataViz")
# Load the movie data from csv
movies <- read.csv("Movies.csv")
# Peak at the structure
str(movies)
